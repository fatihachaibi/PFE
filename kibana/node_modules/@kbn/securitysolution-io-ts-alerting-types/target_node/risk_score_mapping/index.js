"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.risk_score_mapping_value = exports.risk_score_mapping_item = exports.risk_score_mapping_field = exports.risk_score_mapping = exports.riskScoreMappingOrUndefined = void 0;

var t = _interopRequireWildcard(require("io-ts"));

var _securitysolutionIoTsTypes = require("@kbn/securitysolution-io-ts-types");

var _risk_score = require("../risk_score");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/* eslint-disable @typescript-eslint/naming-convention */
const risk_score_mapping_field = t.string;
exports.risk_score_mapping_field = risk_score_mapping_field;
const risk_score_mapping_value = t.string;
exports.risk_score_mapping_value = risk_score_mapping_value;
const risk_score_mapping_item = t.exact(t.type({
  field: risk_score_mapping_field,
  value: risk_score_mapping_value,
  operator: _securitysolutionIoTsTypes.operator,
  risk_score: _risk_score.riskScoreOrUndefined
}));
exports.risk_score_mapping_item = risk_score_mapping_item;
const risk_score_mapping = t.array(risk_score_mapping_item);
exports.risk_score_mapping = risk_score_mapping;
const riskScoreMappingOrUndefined = t.union([risk_score_mapping, t.undefined]);
exports.riskScoreMappingOrUndefined = riskScoreMappingOrUndefined;