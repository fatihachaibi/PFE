"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TelemetryCounterType = void 0;

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/**
 * Definition of the context that can be appended to the events through the {@link IAnalyticsClient.registerContextProvider}.
 */

/**
 * Event Type used for indexed structures. Only used to improve the readability of the types
 */

/**
 * Types of the Telemetry Counter: It allows to differentiate what happened to the events
 */
let TelemetryCounterType;
/**
 * Shape of the events emitted by the telemetryCounter$ observable
 */

exports.TelemetryCounterType = TelemetryCounterType;

(function (TelemetryCounterType) {
  TelemetryCounterType["enqueued"] = "enqueued";
  TelemetryCounterType["sent_to_shipper"] = "sent_to_shipper";
  TelemetryCounterType["succeeded"] = "succeeded";
  TelemetryCounterType["failed"] = "failed";
  TelemetryCounterType["dropped"] = "dropped";
})(TelemetryCounterType || (exports.TelemetryCounterType = TelemetryCounterType = {}));