/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.apm_bundle_jsonpfunction=window.apm_bundle_jsonpfunction||[]).push([[5],{1048:function(e,t,n){"use strict";n.r(t);var a=n(13),r=n(0),i=n(1),s=n.n(i),o=n(33),l=n.n(o),c=n(184);const p=r.i18n.translate("xpack.apm.tutorial.agent_config.defaultStandaloneConfig",{defaultMessage:"Default Standalone configuration"});var u=n(6);function m({options:e,selectedOption:t,onChange:n,fleetLink:i}){const{fleetAgents:o,standalone:l}=Object(u.groupBy)(e,"type"),c=(null==l?void 0:l.map((({key:e,label:t})=>({key:e,label:t}))))||[],p=null!=o&&o.length?[{key:"fleet_policies",label:r.i18n.translate("xpack.apm.tutorial.agent_config.fleetPoliciesLabel",{defaultMessage:"Fleet policies"}),options:o.map((({key:e,label:t})=>({key:e,label:t})))}]:[];return s.a.createElement(a.EuiFormRow,{label:r.i18n.translate("xpack.apm.tutorial.agent_config.choosePolicyLabel",{defaultMessage:"Choose policy"}),labelAppend:i&&s.a.createElement(a.EuiText,{size:"xs"},s.a.createElement(a.EuiLink,{href:i.href},i.label)),helpText:r.i18n.translate("xpack.apm.tutorial.agent_config.choosePolicy.helper",{defaultMessage:"Adds the selected policy configuration to the snippet below."})},s.a.createElement(a.EuiComboBox,{"data-test-subj":`policySelector_${null==t?void 0:t.key}`,isClearable:!1,singleSelection:{asPlainText:!0},options:[...c,...p],selectedOptions:t?[{key:t.key,label:t.label}]:[],onChange:t=>{const a=e.find((({key:e})=>e===t[0].key));n(a)}}))}const d=l.a.div.withConfig({displayName:"CentralizedContainer",componentId:"sc-e43dnk-0"})(["display:flex;justify-content:center;align-items:center;"]),f=r.i18n.translate("xpack.apm.tutorial.agent_config.manageFleetPolicies",{defaultMessage:"Manage fleet policies"}),v=r.i18n.translate("xpack.apm.tutorial.agent_config.getStartedWithFleet",{defaultMessage:"Get started with fleet"}),g={fleetAgents:[],cloudStandaloneSetup:void 0,isFleetEnabled:!1};function h({isFleetEnabled:e,hasFleetAgents:t,basePath:n,kibanaVersion:a}){if(e)return t?{label:f,href:`${n}/app/fleet#/policies`}:{label:v,href:`${n}/app/integrations#/detail/apm/overview`}}t.default=function({variantId:e,http:t,basePath:n,isCloudEnabled:r,kibanaVersion:o}){const[l,u]=Object(i.useState)(g),[f,v]=Object(i.useState)(!0),[S,k]=Object(i.useState)();Object(i.useEffect)((()=>{!async function(){v(!0);try{const e=await t.get("/internal/apm/fleet/agents");e&&u(e)}catch(e){v(!1),console.error("Error while fetching fleet agents.",e)}}()}),[t]);const C=Object(i.useMemo)((()=>{const e=function({isCloudEnabled:e,data:t}){var n,a,r;const i=!(!e||null===(n=t.cloudStandaloneSetup)||void 0===n||!n.apmServerUrl),s=t.fleetAgents.map((e=>({key:e.id,type:"fleetAgents",label:e.name,apmServerUrl:e.apmServerUrl,secretToken:e.secretToken,isVisible:!0,isSelected:"policy-elastic-agent-on-cloud"===e.id}))),o=s.some((({isSelected:e})=>e));return[{key:"cloud",type:"standalone",label:p,apmServerUrl:null===(a=t.cloudStandaloneSetup)||void 0===a?void 0:a.apmServerUrl,secretToken:null===(r=t.cloudStandaloneSetup)||void 0===r?void 0:r.secretToken,isVisible:i&&!o,isSelected:!o},{key:"onPrem",type:"standalone",label:p,apmServerUrl:"http://localhost:8200",secretToken:"",isVisible:!i&&!o,isSelected:!o},...s].filter((({isVisible:e})=>e))}({isCloudEnabled:r,data:l}),t=e.find((({isSelected:e})=>e));return k(t),v(!1),e}),[l,r]);if(f)return s.a.createElement(d,{"data-test-subj":"loading"},s.a.createElement(a.EuiLoadingSpinner,null));const E=Object(c.a)({variantId:e,policyDetails:{apmServerUrl:null==S?void 0:S.apmServerUrl,secretToken:null==S?void 0:S.secretToken}}),A=!!l.fleetAgents.length;return s.a.createElement(s.a.Fragment,null,s.a.createElement(m,{options:C,selectedOption:S,onChange:e=>k(e),fleetLink:h({isFleetEnabled:l.isFleetEnabled,hasFleetAgents:A,basePath:n,kibanaVersion:o})}),s.a.createElement(a.EuiSpacer,null),s.a.createElement(a.EuiCodeBlock,{isCopyable:!0,language:"bash","data-test-subj":"commands"},E))}},184:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=n(99),r=n.n(a),i=n(0);const s={java:"java -javaagent:/path/to/elastic-apm-agent-<version>.jar \\\n-Delastic.apm.service_name=my-application \\\n-Delastic.apm.server_urls={{{apmServerUrl}}} \\\n-Delastic.apm.secret_token={{{secretToken}}} \\\n-Delastic.apm.environment=production \\\n-Delastic.apm.application_packages=org.example \\\n-jar my-application.jar",node:`// ${i.i18n.translate("xpack.apm.tutorial.nodeClient.configure.commands.addThisToTheFileTopComment",{defaultMessage:"Add this to the VERY top of the first file loaded in your app"})}\nvar apm = require('elastic-apm-node').start({\n\n// ${i.i18n.translate("xpack.apm.tutorial.nodeClient.configure.commands.setRequiredServiceNameComment",{defaultMessage:"Override the service name from package.json"})}\n// ${i.i18n.translate("xpack.apm.tutorial.nodeClient.configure.commands.allowedCharactersComment",{defaultMessage:"Allowed characters: a-z, A-Z, 0-9, -, _, and space"})}\nserviceName: '',\n\n// ${i.i18n.translate("xpack.apm.tutorial.nodeClient.configure.commands.useIfApmRequiresTokenComment",{defaultMessage:"Use if APM Server requires a secret token"})}\nsecretToken: '{{{secretToken}}}',\n\n// ${i.i18n.translate("xpack.apm.tutorial.nodeClient.configure.commands.setCustomApmServerUrlComment",{defaultMessage:"Set the custom APM Server URL (default: {defaultApmServerUrl})",values:{defaultApmServerUrl:"http://localhost:8200"}})}\nserverUrl: '{{{apmServerUrl}}}',\n\n// ${i.i18n.translate("xpack.apm.tutorial.nodeClient.configure.commands.setCustomServiceEnvironmentComment",{defaultMessage:"Set the service environment"})}\nenvironment: 'production'\n})`,django:`# ${i.i18n.translate("xpack.apm.tutorial.djangoClient.configure.commands.addAgentComment",{defaultMessage:"Add the agent to the installed apps"})}\nINSTALLED_APPS = (\n'elasticapm.contrib.django',\n# ...\n)\n\nELASTIC_APM = {\n# ${i.i18n.translate("xpack.apm.tutorial.djangoClient.configure.commands.setRequiredServiceNameComment",{defaultMessage:"Set the required service name. Allowed characters:"})}\n# ${i.i18n.translate("xpack.apm.tutorial.djangoClient.configure.commands.allowedCharactersComment",{defaultMessage:"a-z, A-Z, 0-9, -, _, and space"})}\n#'SERVICE_NAME': 'unknown-python-service',\n\n# ${i.i18n.translate("xpack.apm.tutorial.djangoClient.configure.commands.useIfApmServerRequiresTokenComment",{defaultMessage:"Use if APM Server requires a secret token"})}\n'SECRET_TOKEN': '{{{secretToken}}}',\n\n# ${i.i18n.translate("xpack.apm.tutorial.djangoClient.configure.commands.setCustomApmServerUrlComment",{defaultMessage:"Set the custom APM Server URL (default: {defaultApmServerUrl})",values:{defaultApmServerUrl:"http://localhost:8200"}})}\n'SERVER_URL': '{{{apmServerUrl}}}',\n\n# ${i.i18n.translate("xpack.apm.tutorial.djangoClient.configure.commands.setServiceEnvironmentComment",{defaultMessage:"Set the service environment"})}\n'ENVIRONMENT': 'production',\n}\n\n# ${i.i18n.translate("xpack.apm.tutorial.djangoClient.configure.commands.addTracingMiddlewareComment",{defaultMessage:"To send performance metrics, add our tracing middleware:"})}\nMIDDLEWARE = (\n'elasticapm.contrib.django.middleware.TracingMiddleware',\n#...\n)`,flask:`# ${i.i18n.translate("xpack.apm.tutorial.flaskClient.configure.commands.initializeUsingEnvironmentVariablesComment",{defaultMessage:"initialize using environment variables"})}\nfrom elasticapm.contrib.flask import ElasticAPM\napp = Flask(__name__)\napm = ElasticAPM(app)\n\n# ${i.i18n.translate("xpack.apm.tutorial.flaskClient.configure.commands.configureElasticApmComment",{defaultMessage:"or configure to use ELASTIC_APM in your application's settings"})}\nfrom elasticapm.contrib.flask import ElasticAPM\napp.config['ELASTIC_APM'] = {\n# ${i.i18n.translate("xpack.apm.tutorial.flaskClient.configure.commands.setRequiredServiceNameComment",{defaultMessage:"Set the required service name. Allowed characters:"})}\n# ${i.i18n.translate("xpack.apm.tutorial.flaskClient.configure.commands.allowedCharactersComment",{defaultMessage:"a-z, A-Z, 0-9, -, _, and space"})}\n#'SERVICE_NAME': 'unknown-python-service',\n\n# ${i.i18n.translate("xpack.apm.tutorial.flaskClient.configure.commands.useIfApmServerRequiresTokenComment",{defaultMessage:"Use if APM Server requires a secret token"})}\n'SECRET_TOKEN': '{{{secretToken}}}',\n\n# ${i.i18n.translate("xpack.apm.tutorial.flaskClient.configure.commands.setCustomApmServerUrlComment",{defaultMessage:"Set the custom APM Server URL (default: {defaultApmServerUrl})",values:{defaultApmServerUrl:"http://localhost:8200"}})}\n'SERVER_URL': '{{{apmServerUrl}}}',\n\n# ${i.i18n.translate("xpack.apm.tutorial.flaskClient.configure.commands.setServiceEnvironmentComment",{defaultMessage:"Set the service environment"})}\n'ENVIRONMENT': 'production',\n}\n\napm = ElasticAPM(app)`,rails:"# config/elastic_apm.yml:\n\n# Set the service name - allowed characters: a-z, A-Z, 0-9, -, _ and space\n# Defaults to the name of your Rails app\nservice_name: 'my-service'\n\n# Use if APM Server requires a secret token\nsecret_token: '{{{secretToken}}}'\n\n# Set the custom APM Server URL (default: http://localhost:8200)\nserver_url: '{{{apmServerUrl}}}'\n\n# Set the service environment\nenvironment: 'production'",rack:`# config/elastic_apm.yml:\n\n# ${i.i18n.translate("xpack.apm.tutorial.rackClient.createConfig.commands.setServiceNameComment",{defaultMessage:"Set the service name - allowed characters: a-z, A-Z, 0-9, -, _ and space"})}\n# ${i.i18n.translate("xpack.apm.tutorial.rackClient.createConfig.commands.defaultsToTheNameOfRackAppClassComment",{defaultMessage:"Defaults to the name of your Rack app's class."})}\nservice_name: 'my-service'\n\n# ${i.i18n.translate("xpack.apm.tutorial.rackClient.createConfig.commands.useIfApmServerRequiresTokenComment",{defaultMessage:"Use if APM Server requires a token"})}\nsecret_token: '{{{secretToken}}}'\n\n# ${i.i18n.translate("xpack.apm.tutorial.rackClient.createConfig.commands.setCustomApmServerComment",{defaultMessage:"Set custom APM Server URL (default: {defaultServerUrl})",values:{defaultServerUrl:"http://localhost:8200"}})}\nserver_url: '{{{apmServerUrl}}}',\n\n# ${i.i18n.translate("xpack.apm.tutorial.rackClient.createConfig.commands.setServiceEnvironment",{defaultMessage:"Set the service environment"})}\nenvironment: 'production'`,go:`# ${i.i18n.translate("xpack.apm.tutorial.goClient.configure.commands.initializeUsingEnvironmentVariablesComment",{defaultMessage:"Initialize using environment variables:"})}\n\n# ${i.i18n.translate("xpack.apm.tutorial.goClient.configure.commands.setServiceNameComment",{defaultMessage:"Set the service name. Allowed characters: # a-z, A-Z, 0-9, -, _, and space."})}\n# ${i.i18n.translate("xpack.apm.tutorial.goClient.configure.commands.usedExecutableNameComment",{defaultMessage:"If ELASTIC_APM_SERVICE_NAME is not specified, the executable name will be used."})}\nexport ELASTIC_APM_SERVICE_NAME=\n\n# ${i.i18n.translate("xpack.apm.tutorial.goClient.configure.commands.setCustomApmServerUrlComment",{defaultMessage:"Set custom APM Server URL (default: {defaultApmServerUrl})",values:{defaultApmServerUrl:"http://localhost:8200"}})}\nexport ELASTIC_APM_SERVER_URL={{{apmServerUrl}}}\n\n# ${i.i18n.translate("xpack.apm.tutorial.goClient.configure.commands.useIfApmRequiresTokenComment",{defaultMessage:"Use if APM Server requires a secret token"})}\nexport ELASTIC_APM_SECRET_TOKEN={{{secretToken}}}\n\n# ${i.i18n.translate("xpack.apm.tutorial.goClient.configure.commands.setServiceEnvironment",{defaultMessage:"Set the service environment"})}\nexport ELASTIC_APM_ENVIRONMENT=\n`,dotnet:'{\n"ElasticApm": {\n"SecretToken": "{{{secretToken}}}",\n"ServerUrls": "{{{apmServerUrl}}}", //Set custom APM Server URL (default: http://localhost:8200)\n"ServiceName": "MyApp", //allowed characters: a-z, A-Z, 0-9, -, _, and space. Default is the entry assembly of the application\n"Environment": "production", // Set the service environment\n}\n}',php:'elastic_apm.server_url="{{{apmServerUrl}}}"\nelastic_apm.secret_token="{{{secretToken}}}"\nelastic_apm.service_name="My service"\n',js:`import { init as initApm } from '@elastic/apm-rum'\nvar apm = initApm({\n\n  // ${i.i18n.translate("xpack.apm.tutorial.jsClient.installDependency.commands.setRequiredServiceNameComment",{defaultMessage:"Set required service name (allowed characters: a-z, A-Z, 0-9, -, _, and space)"})}\n  serviceName: 'your-app-name',\n\n  // ${i.i18n.translate("xpack.apm.tutorial.jsClient.installDependency.commands.setCustomApmServerUrlComment",{defaultMessage:"Set custom APM Server URL (default: {defaultApmServerUrl})",values:{defaultApmServerUrl:"http://localhost:8200"}})}\n  serverUrl: '{{{apmServerUrl}}}',\n\n  // ${i.i18n.translate("xpack.apm.tutorial.jsClient.installDependency.commands.setServiceVersionComment",{defaultMessage:"Set the service version (required for source map feature)"})}\n  serviceVersion: '',\n\n  // ${i.i18n.translate("xpack.apm.tutorial.jsClient.installDependency.commands.setServiceEnvironmentComment",{defaultMessage:"Set the service environment"})}\n  environment: 'production'\n})`,js_script:"<script src=\"https://your-cdn-host.com/path/to/elastic-apm-rum.umd.min.js\" crossorigin><\/script>\n<script>\n  elasticApm.init({\n    serviceName: 'your-app-name',\n    serverUrl: '{{{apmServerUrl}}}',\n  })\n<\/script>\n"};function o({variantId:e,policyDetails:t}){const n=s[e];return n?r.a.render(n,t):""}},99:function(e,t,n){var a,r,i,s;
/*!
 * mustache.js - Logic-less {{mustache}} templates with JavaScript
 * http://github.com/janl/mustache.js
 */s=function(e){var t=Object.prototype.toString,n=Array.isArray||function(e){return"[object Array]"===t.call(e)};function a(e){return"function"==typeof e}function r(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function i(e,t){return null!=e&&"object"==typeof e&&t in e}var s=RegExp.prototype.test,o=/\S/;var l={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},c=/\s*/,p=/\s+/,u=/\s*=/,m=/\s*\}/,d=/#|\^|\/|>|\{|&|=|!/;function f(e){this.string=e,this.tail=e,this.pos=0}function v(e,t){this.view=e,this.cache={".":this.view},this.parent=t}function g(){this.cache={}}f.prototype.eos=function(){return""===this.tail},f.prototype.scan=function(e){var t=this.tail.match(e);if(!t||0!==t.index)return"";var n=t[0];return this.tail=this.tail.substring(n.length),this.pos+=n.length,n},f.prototype.scanUntil=function(e){var t,n=this.tail.search(e);switch(n){case-1:t=this.tail,this.tail="";break;case 0:t="";break;default:t=this.tail.substring(0,n),this.tail=this.tail.substring(n)}return this.pos+=t.length,t},v.prototype.push=function(e){return new v(e,this)},v.prototype.lookup=function(e){var t,n=this.cache;if(n.hasOwnProperty(e))t=n[e];else{for(var r,s,o=this,l=!1;o;){if(e.indexOf(".")>0)for(t=o.view,r=e.split("."),s=0;null!=t&&s<r.length;)s===r.length-1&&(l=i(t,r[s])),t=t[r[s++]];else t=o.view[e],l=i(o.view,e);if(l)break;o=o.parent}n[e]=t}return a(t)&&(t=t.call(this.view)),t},g.prototype.clearCache=function(){this.cache={}},g.prototype.parse=function(t,a){var i=this.cache,l=i[t];return null==l&&(l=i[t]=function(t,a){if(!t)return[];var i,l,v,g,h=[],S=[],k=[],C=!1,E=!1;function A(){if(C&&!E)for(;k.length;)delete S[k.pop()];else k=[];C=!1,E=!1}function y(e){if("string"==typeof e&&(e=e.split(p,2)),!n(e)||2!==e.length)throw new Error("Invalid tags: "+e);i=new RegExp(r(e[0])+"\\s*"),l=new RegExp("\\s*"+r(e[1])),v=new RegExp("\\s*"+r("}"+e[1]))}y(a||e.tags);for(var M,b,U,x,_,w,T=new f(t);!T.eos();){if(M=T.pos,U=T.scanUntil(i))for(var R=0,j=U.length;R<j;++R)g=x=U.charAt(R),function(e,t){return s.call(e,t)}(o,g)?E=!0:k.push(S.length),S.push(["text",x,M,M+1]),M+=1,"\n"===x&&A();if(!T.scan(i))break;if(C=!0,b=T.scan(d)||"name",T.scan(c),"="===b?(U=T.scanUntil(u),T.scan(u),T.scanUntil(l)):"{"===b?(U=T.scanUntil(v),T.scan(m),T.scanUntil(l),b="&"):U=T.scanUntil(l),!T.scan(l))throw new Error("Unclosed tag at "+T.pos);if(_=[b,U,M,T.pos],S.push(_),"#"===b||"^"===b)h.push(_);else if("/"===b){if(!(w=h.pop()))throw new Error('Unopened section "'+U+'" at '+M);if(w[1]!==U)throw new Error('Unclosed section "'+w[1]+'" at '+M)}else"name"===b||"{"===b||"&"===b?E=!0:"="===b&&y(U)}if(w=h.pop())throw new Error('Unclosed section "'+w[1]+'" at '+T.pos);return function(e){for(var t,n=[],a=n,r=[],i=0,s=e.length;i<s;++i)switch((t=e[i])[0]){case"#":case"^":a.push(t),r.push(t),a=t[4]=[];break;case"/":r.pop()[5]=t[2],a=r.length>0?r[r.length-1][4]:n;break;default:a.push(t)}return n}(function(e){for(var t,n,a=[],r=0,i=e.length;r<i;++r)(t=e[r])&&("text"===t[0]&&n&&"text"===n[0]?(n[1]+=t[1],n[3]=t[3]):(a.push(t),n=t));return a}(S))}(t,a)),l},g.prototype.render=function(e,t,n){var a=this.parse(e),r=t instanceof v?t:new v(t);return this.renderTokens(a,r,n,e)},g.prototype.renderTokens=function(e,t,n,a){for(var r,i,s,o="",l=0,c=e.length;l<c;++l)s=void 0,"#"===(i=(r=e[l])[0])?s=this.renderSection(r,t,n,a):"^"===i?s=this.renderInverted(r,t,n,a):">"===i?s=this.renderPartial(r,t,n,a):"&"===i?s=this.unescapedValue(r,t):"name"===i?s=this.escapedValue(r,t):"text"===i&&(s=this.rawValue(r)),void 0!==s&&(o+=s);return o},g.prototype.renderSection=function(e,t,r,i){var s=this,o="",l=t.lookup(e[1]);if(l){if(n(l))for(var c=0,p=l.length;c<p;++c)o+=this.renderTokens(e[4],t.push(l[c]),r,i);else if("object"==typeof l||"string"==typeof l||"number"==typeof l)o+=this.renderTokens(e[4],t.push(l),r,i);else if(a(l)){if("string"!=typeof i)throw new Error("Cannot use higher-order sections without the original template");null!=(l=l.call(t.view,i.slice(e[3],e[5]),(function(e){return s.render(e,t,r)})))&&(o+=l)}else o+=this.renderTokens(e[4],t,r,i);return o}},g.prototype.renderInverted=function(e,t,a,r){var i=t.lookup(e[1]);if(!i||n(i)&&0===i.length)return this.renderTokens(e[4],t,a,r)},g.prototype.renderPartial=function(e,t,n){if(n){var r=a(n)?n(e[1]):n[e[1]];return null!=r?this.renderTokens(this.parse(r),t,n,r):void 0}},g.prototype.unescapedValue=function(e,t){var n=t.lookup(e[1]);if(null!=n)return n},g.prototype.escapedValue=function(t,n){var a=n.lookup(t[1]);if(null!=a)return e.escape(a)},g.prototype.rawValue=function(e){return e[1]},e.name="mustache.js",e.version="2.3.2",e.tags=["{{","}}"];var h=new g;return e.clearCache=function(){return h.clearCache()},e.parse=function(e,t){return h.parse(e,t)},e.render=function(e,t,a){if("string"!=typeof e)throw new TypeError('Invalid template! Template should be a "string" but "'+(n(r=e)?"array":typeof r)+'" was given as the first argument for mustache#render(template, view, partials)');var r;return h.render(e,t,a)},e.to_html=function(t,n,r,i){var s=e.render(t,n,r);if(!a(i))return s;i(s)},e.escape=function(e){return String(e).replace(/[&<>"'`=\/]/g,(function(e){return l[e]}))},e.Scanner=f,e.Context=v,e.Writer=g,e},t&&"string"!=typeof t.nodeName?s(t):(r=[t],void 0===(i="function"==typeof(a=s)?a.apply(t,r):a)||(e.exports=i))}}]);