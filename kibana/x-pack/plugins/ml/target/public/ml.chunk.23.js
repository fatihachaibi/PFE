/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[23],{223:function(e,t,i){"use strict";i.d(t,"b",(function(){return s})),i.d(t,"a",(function(){return NewJobCapabilitiesServiceBase}));var n=i(5),r=i.n(n),a=i(46);function s(e){const t=e.filter((e=>e.type===a.ES_FIELD_TYPES.KEYWORD)).map((e=>e.id)),i=e.filter((e=>e.type===a.ES_FIELD_TYPES.TEXT)).map((e=>e.id));return{fieldsPreferringKeyword:e.filter((e=>e.type!==a.ES_FIELD_TYPES.TEXT||e.type===a.ES_FIELD_TYPES.TEXT&&!1===t.includes(`${e.id}.keyword`))),fieldsPreferringText:e.filter((e=>e.type!==a.ES_FIELD_TYPES.KEYWORD||e.type===a.ES_FIELD_TYPES.KEYWORD&&!1===i.includes(e.id.replace(/\.keyword$/,""))))}}class NewJobCapabilitiesServiceBase{constructor(){r()(this,"_fields",void 0),r()(this,"_aggs",void 0),this._fields=[],this._aggs=[]}get fields(){return this._fields}get aggs(){return this._aggs}get newJobCaps(){return{fields:this._fields,aggs:this._aggs}}getFieldById(e){const t=this._fields.find((t=>t.id===e));return void 0===t?null:t}getAggById(e){const t=this._aggs.find((t=>t.id===e));return void 0===t?null:t}}},98:function(e,t,i){"use strict";i.d(t,"a",(function(){return d})),i.d(t,"h",(function(){return u})),i.d(t,"e",(function(){return o})),i.d(t,"d",(function(){return c})),i.d(t,"c",(function(){return l})),i.d(t,"b",(function(){return f})),i.d(t,"f",(function(){return g})),i.d(t,"i",(function(){return w})),i.d(t,"g",(function(){return E}));var n=i(2),r=i(26);let a=[],s=null;async function d(e){s=e}function u(){return Object(r.i)().find({type:"search",perPage:1e4}).then((e=>(a=e.savedObjects,a)))}async function o(){if(null===s)throw new Error("Data views are not initialized!");return(await s.getIdsWithTitle()).map((({title:e})=>e))}async function c(e){var t;if(null===s)throw new Error("Data views are not initialized!");const i=(await s.find(e)).find((({title:t})=>t===e));return i?null!==(t=i.id)&&void 0!==t?t:i.title:null}function l(e){if(null===s)throw new Error("Data views are not initialized!");return e?s.get(e):s.create({})}async function f(e){var t;const i={savedSearch:null,dataView:null};if(void 0===e)return i;const n=await async function(e){const t=Object(r.i)(),i=await t.get("search",e);return void 0===i.error?i:null}(e);if(null===n)return i;const a=null===(t=n.references.find((e=>"index-pattern"===e.type)))||void 0===t?void 0:t.id;return i.dataView=await l(a),i.savedSearch=n,i}function g(e){const t=e.attributes.kibanaSavedObjectMeta;return JSON.parse(t.searchSourceJSON)}function w(e,t=!1){return!!e.isTimeBased()||(t&&Object(r.l)().addWarning({title:n.i18n.translate("xpack.ml.dataViewNotBasedOnTimeSeriesNotificationTitle",{defaultMessage:"The data view {dataViewName} is not based on a time series",values:{dataViewName:e.title}}),text:n.i18n.translate("xpack.ml.dataViewNotBasedOnTimeSeriesNotificationDescription",{defaultMessage:"Anomaly detection only runs over time-based indices"})}),!1)}function E(e){return e.includes(":")}}}]);